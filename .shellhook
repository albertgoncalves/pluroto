#!/usr/bin/env bash

export WD=$PWD

for x in bin out; do
    if [ ! -d "$WD/$x" ]; then
        mkdir "$WD/$x"
    fi
done

export flags=(
    "-ferror-limit=1"
    -fno-math-errno
    "-fsanitize=address"
    "-fsanitize=bounds"
    "-fsanitize=float-divide-by-zero"
    "-fsanitize=implicit-conversion"
    "-fsanitize=integer"
    "-fsanitize=nullability"
    "-fsanitize=undefined"
    -fshort-enums
    -ggdb
    "-march=native"
    -O1
    "-std=c++11"
    -Werror
    -Weverything
    -Wno-c++98-compat
    -Wno-c++98-compat-pedantic
    -Wno-c99-extensions
    -Wno-covered-switch-default
    -Wno-extra-semi-stmt
    -Wno-padded
    -Wno-reserved-identifier
    -Wno-unreachable-code-return
    -Wno-unsafe-buffer-usage
)

runc () {
    handle=$(basename "${1%%.*}")
    args=("$@")
    clang-format -i -verbose "$1" || return
    clang++ "${flags[@]}" -o "$WD/bin/${handle}" "$1" || return
    "$WD/bin/${handle}" "${args[@]:1}"
}

runcbt () {
    handle=$(basename "${1%%.*}")
    args=("$@")
    clang-format -i -verbose "$1" || return
    clang++ "${flags[@]}" -o "$WD/bin/${handle}" "$1" || return

    # NOTE: See `https://jvns.ca/blog/2018/04/28/debugging-a-segfault-on-linux/`.
    ASAN_OPTIONS=abort_on_error=1:disable_coredump=0:unmap_shadow_on_exit=1 \
        "$WD/bin/${handle}" "${args[@]:1}" \
        || coredumpctl debug -A '-q --readnow -ex "thread apply all backtrace full" -ex q'
}

export -f runc
export -f runcbt
